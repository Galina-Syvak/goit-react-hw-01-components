{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","map","item","label","percentage","id","FriendList","friends","isOnline","width","TransactionHistory","items","type","amount","currency","App","user","data","transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"izGAEe,SAASA,EAAT,GAA0D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC7D,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAI,gHAAsBF,UAAU,WACtD,mBAAGA,UAAU,OAAb,SAAqBL,IACrB,oBAAGK,UAAU,MAAb,eAAsBJ,EAAtB,OACA,mBAAGI,UAAU,WAAb,SAAyBH,OAG3B,qBAAIG,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMI,eAEpC,+BACE,sBAAMH,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,WAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,iB,WCrB7B,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,MAC1C,OACE,0BAASC,UAAU,aAAnB,UACG,oBAAIA,UAAU,QAAd,SAAuBO,KAAe,GAEvC,oBAAIP,UAAU,YAAd,SACGD,EAAMS,KAAI,SAAAC,GAAI,OACb,qBAAIT,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBS,EAAKC,QAC9B,uBAAMV,UAAU,aAAhB,UAA8BS,EAAKE,WAAnC,SAFwBF,EAAKG,Y,WCP1B,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,oBAAId,UAAU,cAAd,SACGc,EAAQN,KAAI,gBAAGI,EAAH,EAAGA,GAAId,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAMoB,EAArB,EAAqBA,SAArB,OACX,qBAAIf,UAAU,OAAd,UACE,sBAAMA,UAAU,SAAhB,SAA0Be,IAC1B,qBAAKf,UAAU,SAASC,IAAKH,EAAQI,IAAKP,EAAMqB,MAAM,OACtD,mBAAGhB,UAAU,OAAb,SAAqBL,MAHGiB,Q,WCJnB,SAASK,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAOlB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGkB,EAAMV,KAAI,gBAAGI,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHET,W,WCcJU,MApBf,WACE,OACE,sBAAKtB,UAAU,MAAf,UACE,cAACN,EAAD,CACEC,KAAM4B,EAAK5B,KACXC,IAAK2B,EAAK3B,IACVC,SAAU0B,EAAK1B,SACfC,OAAQyB,EAAKzB,OACbC,MAAOwB,EAAKxB,QAGd,cAACO,EAAD,CAAYC,MAAOiB,EAAKjB,MAAOR,MAAOyB,IAEtC,cAACX,EAAD,CAAYC,QAASA,IAErB,cAACG,EAAD,CAAoBC,MAAOO,QCZlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0dad2e8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">`@{tag}`</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className=\"statistics\">\n      {<h2 className=\"title\">{title}</h2> && ''}\n\n      <ul className=\"stat-list\">\n        {stats.map(item => (\n          <li className=\"item\" key={item.id}>\n            <span className=\"label\">{item.label}</span>\n            <span className=\"percentage\">{item.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <li className=\"item\" key={id}>\n          <span className=\"status\">{isOnline}</span>\n          <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n          <p className=\"name\">{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import Profile from './components/Profile/Profile';\nimport user from './user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport data from './statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transaction from './transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title={data.title} stats={data} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transaction} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}