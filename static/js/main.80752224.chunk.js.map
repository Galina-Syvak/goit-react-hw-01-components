{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","followers","views","likes","className","css","profile","description","src","alt","item","label","quantity","Statistics","title","statistics","statList","map","percentage","id","FriendList","friends","friendList","isOnline","status","isOffline","width","TransactionHistory","items","transactionHistory","header","cell","type","amount","currency","App","user","data","transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80752224.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3tfAn\",\"description\":\"Profile_description__2gwXT\",\"avatar\":\"Profile_avatar__29BDy\",\"name\":\"Profile_name__3VZZM\",\"tag\":\"Profile_tag__3rkWO\",\"location\":\"Profile_location__Tq1ME\",\"label\":\"Profile_label__3UiFZ\",\"stats\":\"Profile_stats__3E3_n\",\"item\":\"Profile_item__1u16c\",\"quantity\":\"Profile_quantity__3kh39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2E5fI\",\"header\":\"TransactionHistory_header__3DKmD\",\"cell\":\"TransactionHistory_cell__1-_he\",\"item\":\"TransactionHistory_item__1D9NX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__hr_6b\",\"title\":\"Statistics_title__2Tw9F\",\"statList\":\"Statistics_statList__WTZXN\",\"item\":\"Statistics_item__zrQB3\",\"percentage\":\"Statistics_percentage__DOGIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1C78Q\",\"item\":\"FriendList_item__2GLNj\",\"status\":\"FriendList_status__3umPt\",\"isOffline\":\"FriendList_isOffline__30klQ\",\"avatar\":\"FriendList_avatar__3Uw5t\",\"name\":\"FriendList_name__1E92x\"};","import css from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Profile({\n  avatar,\n  name,\n  tag,\n  location,\n  stats: { followers, views, likes },\n}) {\n  return (\n    <div className={css.profile}>\n      <div className={css.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={css.avatar} />\n        <p className={css.name}>{name}</p>\n        <p className={css.tag}>@{tag}</p>\n        <p className={css.location}>{location}</p>\n      </div>\n\n      <ul className={css.stats}>\n        <li className={css.item}>\n          <span className={css.label}>Followers</span>\n          <span className={css.quantity}>{followers}</span>\n        </li>\n        <li className={css.item}>\n          <span className={css.label}>Views</span>\n          <span className={css.quantity}>{views}</span>\n        </li>\n        <li className={css.item}>\n          <span className={css.label}>Likes</span>\n          <span className={css.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import css from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={css.statistics}>\n      {title ? <h2 className={css.title}>{title}</h2> : ''}\n\n      <ul className={css.statList}>\n        {stats.map(item => (\n          <li className={css.item} key={item.id}>\n            <span className={css.label}>{item.label}</span>\n            <span className={css.percentage}>{item.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import css from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <li className={css.item} key={id}>\n          {isOnline ? (\n            <span className={css.status}>{isOnline}</span>\n          ) : (\n            <span className={css.isOffline}>{isOnline}</span>\n          )}\n          <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\n          <p className={css.name}>{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n","import css from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={css.transactionHistory}>\n      <thead className={css.header}>\n        <tr>\n          <th className={css.cell}>Type</th>\n          <th className={css.cell}>Amount</th>\n          <th className={css.cell}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr className={css.item} key={id}>\n            <td className={css.cell}>{type}</td>\n            <td className={css.cell}>{amount}</td>\n            <td className={css.cell}>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import Profile from './components/Profile/Profile';\nimport user from './user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport data from './statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transaction from './transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title={data.title} stats={data} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transaction} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}